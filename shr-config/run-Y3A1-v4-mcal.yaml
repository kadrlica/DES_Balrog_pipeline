run: "Y3A1-v4-shr"

global_seed: 1687


# job setup
jobs:
    # bnl chunksize
    chunksize: 300

    # what to do
    bands: ['g','r','i','z']

collate:
    # how to combine results
    concat_type: 'concat-metacal-des'
    blinding: "y3"


# for now do regular fitting
fitter_type: "metacal-ngmix-boot"
imageio_type: "meds-des-y3"

fit_me_galaxy: True
fit_coadd_galaxy: False

read_wcs: False
read_me_wcs: False

# "correct" in the sense of subtracting neighbors and
# possibly replacing bad pixels with the model
correct_meds:
    # this is only used by the megamixer to determine
    # file paths
    mof_run: "y3v02-mof-001"

    # set the weight to zero for outlier pixels
    # this happens before we replace bad pixels
    reject_outliers: True

    # replace bad pixels with the model. These are either
    # flagged with the below flags or have zero weight
    replace_bad:     True

    # the code will replace pixels with these flags with
    # the model, as well as any zero weight pixels
    # we already zero weight for some flags, so only need
    # to add extra ones below

    # the extractor code doesn't know the flag names,
    # so we put the numbers here
    bad_flags: [
        2,     # SATURATE
        4,     # INTERP
        2048,  # SUSPECT
        8192,  # NEAREDGE
        16384, # TAPEBUMP
    ]


# turning this off for metacal, partly because we replace pixels
# anyway
propagate_star_flags:
    propagate: False

# throw out postage stamps for which the seg map of the
# central object intersects a bright star mask
flag_y1_stellarhalo_masked: False

# if > 0, will add in estimate for intrinsic profile variance 
intr_prof_var_fac: 0.0

# note this should not be set explicitly to false for mof runs
guess_from_nbrs: False

# do *not* do this in the main code, but in the neighbor
# correction code
reject_outliers: False

# the input images have zero weight when lots of bits are set
# Setting these will zero out more
# these are redundant with the replaced pixels above
extra_mask_flag_list: [
    SATURATE,
    INTERP,
    NEAREDGE,
    TAPEBUMP,
    SUSPECT, # subsumes some others, including NEAREDGE,TAPEBUMP
]

# this is the zeros in the weight map, not including other
# things like uberseg zeroing of weight pixels
max_zero_weight_frac: 0.10

# doing this in corrector code
replace_bad_pixels: False

# zero weights for pixels at 90 degree rotation to existing
# zero weight pixels
symmetrize_weight: True

# skip when either all weight or all image are zero
ignore_zero_weights_images: True

# using uberseg even though we subtracted neighbors
region: "uberseg"

image_flags2check: 655343

use_psf_rerun: False
normalize_psf: False
center_psf: False

print_params: True

max_pars:
    method: 'lm'
    ntry: 2
    
    lm_pars:
        maxfev: 2000
        xtol: 5.0e-5
        ftol: 5.0e-5

psf_pars:
    model: "gauss"
    ntry: 5
    fit_pars:
        maxfev: 2000

round_pars:
    fitter_type: 'max'

replace_cov: False
cov_pars:
    m: 5
    h: 1.0e-3

use_logpars: False
model_pars:
    gauss:
        g:
            type: "ba"
            sigma: 0.3

        T:
            type: "TwoSidedErf"
            pars: [-10.0, 0.03, 1.0e+06, 1.0e+05]

        counts:
            type: "TwoSidedErf"
            pars: [-1.0e+04, 1.0, 1.0e+09, 0.25e+08]
            repeat: True

        cen:
            type: "dgauss"
            width: 0.27

metacal_pars:
    symmetrize_psf: True
    types: ['noshear','1p','1m','2p','2m']

# checkpoint times in minutes, needed for condor in case we pass a batch system
# limit such as in the condor scavenge.
# 0 means after the first object

# checkpoints for lsf
checkpoints: [0,5,10,15,20,25,
              30,60,
              90,120, 
              150,180,
              210,240,
              270,300,
              330,360,
              390,420,
              480,540,
              600,700,
              800,900,1000,1200,1400,1600,1800,2000]
