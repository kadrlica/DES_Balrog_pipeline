#!/cvmfs/des.opensciencegrid.org/2015_Q2/eeups/SL6/eups/packages/Linux64/python/2.7.9+1/bin/python
"""
process a MEDS file to extract neighbor information, including
friends-of-friends groups

You can send any of the meds files for a tile, as the band specific
information is not used
"""
from __future__ import print_function
import os
import sys
import numpy
import meds
import fitsio
from glob import glob
import shutil
import errno

import esutil as eu
from ngmixer import files
from ngmixer.nbrsfofs import MedsNbrs,NbrsFoF

from argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument('config',help='run configuration file')
parser.add_argument('meds_file',help='a meds file path')

parser.add_argument('--nbrs-file',help='file name for nbrs')
parser.add_argument('--fof-file',help='file name for fofs')

def main():
    """
    Make the nbrs file for a given meds dir
    """

    args=parser.parse_args()
    conf = files.read_config(args.config)

    nbrs_file = args.nbrs_file
    if nbrs_file is None:
        nbrs_file=files.get_nbrs_file_fromfile(args.meds_file, conf['run'])
    files.makedirs_fromfile(nbrs_file)

    fof_file=args.fof_file
    if fof_file is None:
        fof_file=files.get_fof_file_fromfile(args.meds_file, conf['run'])
    files.makedirs_fromfile(fof_file)

    m=meds.MEDS(args.meds_file)
    nbrs = MedsNbrs(m, conf['nbrs'])

    nbrs_data = nbrs.get_nbrs()

    if nbrs_data is not None:


        hdr={
            'run':conf['run'],
            'conf':args.config,
            'meds':args.meds_file,
        }
        print("writing:",nbrs_file)
        fitsio.write(
            nbrs_file,
            nbrs_data,
            header=hdr,
            clobber=True,

        )

        fofs = NbrsFoF(nbrs_data)
        fof_data = fofs.get_fofs()

        print("writing:",fof_file)
        fitsio.write(
            fof_file,
            fof_data,
            header=hdr,
            clobber=True,
        )
        
    return None

    
if __name__ == '__main__':
    main()
    

