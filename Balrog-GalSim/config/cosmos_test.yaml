modules :
  - galsim.des
  - injector
  - ngmix_catalog
  - des_star_catalog
  - input_cosmos_chromatic
  - scene_chromatic
  - cosmos_chromatic_stamp

# These variables are not directly processed by GalSim; this simply allows a convenient way
# to change multiple variable instances quickly throughout the config file.
some_variables :
  # Pick a maximum fft size
  - &max_fft 65536
  # - &max_fft 32768
  # - &max_fft 4096 # GalSim default (likely want higher)

# Define the input files
input :
    # We need a custom `cosmos_catalog` class that allows for config processing
    # with chromatic objects
    cosmos_chromatic_catalog :
        dir : '/usr/local/share/galsim/COSMOS_25.2_training_sample/'
        file_name : 'real_galaxy_catalog_25.2.fits' # Can get this by running `galsim_download_cosmos`
        use_real : False # Only injecting parametric objects
        use_filter_tables : True # Passing lookup tables for filter transmission
        # The transmission files were grabbed from: 
        # http://svo2.cab.inta-csic.es/svo/theory/fps3/index.php?mode=browse&gname=CTIO&gname2=DECam
        filter_dir : '/home/spencer/research/balrog/Balrog-GalSim/inputs/filters'

    des_star_catalog :
        base_dir : '/home/spencer/research/balrog/stars/5sigma'
        model_type :  'Model_16.5-26.5'
        data_version : 'y3v02'

# The gal field defines what kind of galaxy profile to use.
gal :
    type : List
    items :
      - # Galaxy component
        type : COSMOSChromaticGalaxy # Custom COSMOS GSObject
        rotate : {type : Random}
      - # Star component
        type : desStar

psf :
    # For DES chip images with PSFEx files
    type : DES_PSFEx

    # If for some reason you want to use a different PSF model, any standard GalSim
    # PSF's are allowed (but you might get a warning!)
    # type : Gaussian
    # sigma : 0.5  # arcsec
    # No need to specify a flux, since flux=1 is the right thing for a PSF.

stamp :
    # Custom stamp type to get around galsim config issues w/ chromatic objects
    type : COSMOSChromatic
    gsparams :
      # fft size is the most likely change you'll want to make
      maximum_fft_size : *max_fft

image :
    # For injected images:
    type : Balrog # Same as AddOn, but with some additional input attributes and checking

    # Can add some of the command-line arguments here as well.
    # Ok if they are passed both ways, as long as they are consistent.
    geom_file : '/home/spencer/research/balrog/Balrog-GalSim/inputs/Y3A2_COADDTILE_GEOM.fits'
    tile_list : '/home/spencer/research/balrog/Balrog-GalSim/inputs/tilelist.csv'
    tile_dir : '/home/spencer/research/balrog/tiles/'
    # psf_dir : 'psfs' # Default for DES

    # To use all bands:
    # NOTE: y-band currently not supported
    bands : 'griz'
    # To use a subset:
    # bands : 'ri'

    # inj_objs_only : {value : True, noise: CCD}

    version : 'y3v02'
    run_name : 'cosmos_test'

    # Load WCS from DES chip file
    wcs :
      type : Fits

    # Must set galaxy density or total number of injected galaxies per tile **per realization**
    # gal_density : 10 # per arcmin^2
    n_galaxies : 5000 # per tile per realization

    # Set the realizations to be done
    # NOTE: This replaces the old keyword `n_realizations` (although it will still be processed
    # correctly for now). You can pass a single realization value, a range using a dictionary
    # filled with min/max, or a list of individual values:
    # n_realizations : 1 # DEPRECATED!
    realizations : [0]
    # realizations : {'min' : 2, 'max' : 4}
    #realizations : [1, 3, 5]

    # TODO: In future, we should load these fields automatically in script.
    xsize: 2048 # DES nullwt chip
    ysize: 4096 # DES nullwt chip

    # Number of processors to be used on GalSim injection step
    nproc : -1
    #nproc : 1

output :
    dir : '/home/spencer/research/balrog/Balrog-GalSim/tests/cosmos_test/'
